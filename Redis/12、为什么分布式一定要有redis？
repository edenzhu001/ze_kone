这篇笔记围绕以下几点来阐述：
  为什么使用redis?
  使用redis的优缺点?
  单线程的redis怎么这么快?
  Redis的数据类型以及每种数据类型的应用场景
  Redis的过期策略以及内存淘汰机制
  Redis和数据库双写一致性问题
  应对缓存穿透和缓存雪崩问题
  如何解决Redis的并发竞争key问题
  
 一、为什么使用Redis?
  应该是从性能和并发去考虑。
   1.性能->有时候我们需要去查询数据库，而且这种查询很频繁，耗时长，且结果变动不大的SQL,特别适合将运行结果放入缓存中。后面的请求就从缓存中读取，快速。
   2.并发->在大并发情况下，所有的请求都打到数据库。明显数据库支撑不住。所以，此时的redis相当于是个缓冲操作。可以把一部分的请求在缓存上就完成，
   而不是直达数据库。
   
   
 二、redis使用的缺点
  主要是4个问题：
    缓存和数据库的读写一致性问题
    缓存雪崩问题
    缓存击穿问题
    缓存的并发竞争问题
    
 三、单线程的redis为什么这么快？
   回答是3点：
    1.纯内存操作
    2.单线程操作，避免频繁的上下文切换
    3.采用了非阻塞I/O多路复用机制
    
    解释：(1)Redis 将数据储存在内存里面，读写数据的时候都不会受到硬盘 I/O 速度的限制，所以速度极快
         (2)上下文切换是指CPU从一个线程切换到另一个线程。
            在这操作中，需要记录程序计数器当前线程执行到哪行代码了，也许需要记录当前线程中计算的一些变量值寄存器操作等等操作。
         (3)非阻塞IO多路复用：
            简单来说就是redis-client在操作的时候会产生不同事件类型的Socket。
            在服务端就有一段IO复用程序，将其置入队列中。单线程依次去处理socket请求。
            多路就是多个请求，复用就是用重复用单线程去处理请求。
            线程池 其实也是线程的复用。为了避免线程的创建浪费资源，所以设置线程池来处理队列中的任务。
