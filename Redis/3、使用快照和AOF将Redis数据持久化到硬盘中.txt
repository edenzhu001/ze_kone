redis是一款内存服务器，如果出现突然断电的情况，那么内存中的数据都会丢失。
所以，Redis有个很强的功能，持久化。

Redis内存服务器中的数据持久化到硬盘等介质中，使得我们服务器在重启之后还有重用以前的数据，或者是为了防止系统出现故障而将数据
备份到一个远程的位置。


Redis持久化的方式有2种：
  (1)快照Snapshotting(2)只追加文件AOF(append-only-file)
  
1.名词简介
    快照：就是备份，定期备份，将redis服务器中的数据备份到硬盘中
    AOF:只追加文件，它是在执行写命令的时候，将执行的写命令操作复制到磁盘中，后期回复的时候，只需要重新执行一遍这个写命令就可以了。
    
2.应用场景：
    快照：适用于数据不经常修改或者丢失部分数据影响不大的场景。
    
    一开始数据量小的情况下，通过BGSAVE创建快照；
    
    但是后期数据量很大，接收到SAVE命令的Redis服务器在快照创建完毕之前将不再响应任何其他命令的请求。
    SAVE命令并不常用，我们通常只在没有足够的内存去执行BGSAVE命令的时候才会使用SAVE命令，
    或者即使等待持久化操作执行完毕也无所谓的情况下，才会使用这个命令；
    
    一般在停止redis，就可以使用SAVE命令来保存快照数据。
    
    
    AOF:aof持久化会将被执行的写命令写到AOF文件的末尾，依次来记录数据发生的变化。
        打开AOF  ->  appendly yes
        同步频率  ->  appendfsync everysec/always/no
        always -> 每个redis写命令都要写入硬盘，严重降低redis的速度。
        appendfsync -> 每秒中执行一次，显示的将多个命令写入硬盘
        no -> 让操作系统来决定应该何时进行同步
        重写或压缩AOF文件 -> 随着数据量增大，AOF文件也在增大。这样会导致进行数据恢复要用很长的时间。
        解决：-> 用户可以向redis发送BGWRITEAOF命令，该命令会通过移除AOF文件中中冗余命令来重写AOF文件。BGWRITEAOF命令-> Redis会创建一个子线程，负         责。对AOF文件重写。也会面临性能和内存占用问题。
        触发重写/压缩AOF文件条件设定 -> auto-aof-rewriteaof-percentage 100
                                      auto-aof-rewriteaof-min-size 64mb
                                      表示当前AOF的文件体积大于64MB，并且AOF文件的体积比上一次重写之后的体积变大了至少一倍（100%）的时候，Redis                                       将执行重写BGREWRITEAOF命令。
        
